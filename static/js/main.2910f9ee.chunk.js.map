{"version":3,"sources":["context/PhotoContext.js","api/config.js","components/Form.js","components/Navigation.js","components/Header.js","components/NoImages.js","components/Image.js","components/Gallery.js","components/Loader.js","components/Container.js","components/Item.js","components/Search.js","components/NotFound.js","components/WorldMap.js","App.js","serviceWorker.js","index.js"],"names":["PhotoContext","createContext","PhotoContextProvider","props","useState","images","setImages","loading","setLoading","undefined","currentGeoMarker","setGeoMarker","currentUrl","setCurrentUrl","currentId","setCurrentId","callApi","query","axios","get","then","response","data","photos","photo","sessionStorage","setItem","JSON","stringify","catch","error","console","log","Provider","value","runSearch","sessionData","getItem","parse","getGeo","coords","url","findImage","id","filter","img","children","Form","handleSubmit","history","searchEntry","setSearchEntry","className","onSubmit","e","handleSubmitSearch","type","name","placeholder","onChange","target","trim","disabled","height","width","d","fill","fillRule","Navigation","to","Header","NoImages","Image","title","selected","src","alt","onMouseOver","Gallery","noImages","useContext","results","useRef","useEffect","element","document","getElementsByClassName","scrollIntoView","behavior","block","inline","length","map","image","farm","server","secret","lat","parseFloat","latitude","lng","longitude","key","onclick","Loader","Container","searchTerm","Item","Search","NotFound","WorldMap","style","position","top","zIndex","margin","padding","googleMapsApiKey","process","mapContainerStyle","boxShadow","center","zoom","i","pos","customHistory","createBrowserHistory","App","searchInput","preventDefault","currentTarget","reset","push","basename","render","exact","path","match","params","component","Component","Boolean","window","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2910f9ee.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport axios from 'axios';\nimport { apiKey } from '../api/config';\nexport const PhotoContext = createContext();\n\nconst PhotoContextProvider = (props) => {\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentGeoMarker, setGeoMarker] = useState(undefined);\n  const [currentUrl, setCurrentUrl] = useState(undefined);\n  const [currentId, setCurrentId] = useState(undefined);\n\n  const runSearch = (query) => {\n    const sessionData = sessionStorage.getItem(query);\n\n    if (sessionData) {\n      setImages(JSON.parse(sessionData));\n      setLoading(false);\n    } else {\n      callApi(query);\n    }\n  };\n\n  const callApi = (query) => {\n    axios\n      .get(\n        `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&has_geo=1&tags=${query}&per_page=24&format=json&extras=geo&nojsoncallback=1`,\n      )\n      .then((response) => {\n        setImages(response.data.photos.photo);\n        sessionStorage.setItem(\n          query,\n          JSON.stringify(response.data.photos.photo),\n        );\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(\n          'Encountered an error with fetching and parsing data',\n          error,\n        );\n      });\n  };\n\n  const findImage = ({ id }) => {\n    images && id && setCurrentId(images.filter((img) => img.id == id)[0].id);\n  };\n\n  const getGeo = ({ coords, url }) => {\n    setGeoMarker(coords);\n    setCurrentUrl(url);\n  };\n\n  return (\n    <PhotoContext.Provider\n      value={{\n        images,\n        loading,\n        currentGeoMarker,\n        currentId,\n        currentUrl,\n        runSearch,\n        getGeo,\n        findImage,\n      }}\n    >\n      {props.children}\n    </PhotoContext.Provider>\n  );\n};\n\nexport default PhotoContextProvider;\n","export const apiKey = \"636e1481b4f3c446d26b8eb6ebfe7127\";\n","import React, { useState } from 'react';\n\nconst Form = ({ handleSubmit, history }) => {\n  const [searchEntry, setSearchEntry] = useState('');\n\n  // update search text state\n  const updateSearchInput = (e) => {\n    setSearchEntry(e.target.value);\n  };\n\n  const handleSubmitSearch = (e) => {\n    handleSubmit(e, history, searchEntry);\n    //resets\n    setSearchEntry('');\n  };\n\n  return (\n    <form className=\"search-form\" onSubmit={(e) => handleSubmitSearch(e)}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search...\"\n        onChange={updateSearchInput}\n        value={searchEntry}\n      />\n      <button\n        type=\"submit\"\n        className={`search-button ${\n          searchEntry.trim() ? 'active' : 'inactive'\n        }`}\n        disabled={!searchEntry.trim()}\n      >\n        <svg height=\"32\" width=\"32\">\n          <path\n            d=\"M19.427 21.427a8.5 8.5 0 1 1 2-2l5.585 5.585c.55.55.546 1.43 0 1.976l-.024.024a1.399 1.399 0 0 1-1.976 0l-5.585-5.585zM14.5 21a6.5 6.5 0 1 0 0-13 6.5 6.5 0 0 0 0 13z\"\n            fill=\"#ffffff\"\n            fillRule=\"evenodd\"\n          />\n        </svg>\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n  return (\n    <nav className=\"main-nav\">\n      <ul>\n        <li><NavLink to=\"/mountain\">Mountain</NavLink></li>\n        <li><NavLink to=\"/beach\">Beaches</NavLink></li>\n        <li><NavLink to=\"/bird\">Birds</NavLink></li>\n        <li><NavLink to=\"/food\">Food</NavLink></li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport Form from './Form';\nimport Navigation from './Navigation';\n\nconst Header = ({ history, handleSubmit }) => (\n  <>\n    <h1>SnapShot</h1>\n    <Form history={history} handleSubmit={handleSubmit} />\n    <Navigation />\n  </>\n);\n\nexport default Header;\n","import React from \"react\";\n\nconst NoImages = () => (\n  <div>\n    <h2>No Images Found</h2>\n    <p>Please try a different search term</p>\n  </div>\n);\n\nexport default NoImages;\n","import React from 'react';\n\nconst Image = ({ url, title, getGeo, coords, selected }) => (\n  <li className={selected ? 'highlighted' : null}>\n    <img src={url} alt={title} onMouseOver={() => getGeo({ coords, url })} />\n  </li>\n);\n\nexport default Image;\n","import React, { useContext, useRef, useEffect } from 'react';\nimport { PhotoContext } from '../context/PhotoContext';\nimport NoImages from './NoImages';\nimport Image from './Image';\n\nconst Gallery = (props) => {\n  const { getGeo, currentId } = useContext(PhotoContext);\n  const ref = useRef();\n  const results = props.data;\n  let images;\n  let noImages;\n\n  useEffect(() => {\n    var element = document.getElementsByClassName('highlighted')[0];\n    element && console.log(element);\n    element &&\n      element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center',\n        inline: 'nearest',\n      });\n  }, [currentId]);\n\n  // map variables to each item in fetched image array and return image component\n  if (results.length > 0) {\n    images = results.map((image) => {\n      let farm = image.farm;\n      let server = image.server;\n      let id = image.id;\n      let secret = image.secret;\n      let title = image.title;\n      let coords = {\n        lat: parseFloat(image.latitude),\n        lng: parseFloat(image.longitude),\n      };\n      let url = `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}_m.jpg`;\n      let selected = id === currentId;\n      return (\n        <Image\n          url={url}\n          key={id}\n          alt={title}\n          getGeo={getGeo}\n          coords={coords}\n          selected={selected}\n          onclick=\"document.getElementByClass('highlighted').scrollIntoView()\"\n        />\n      );\n    });\n  } else {\n    noImages = <NoImages />; // return 'not found' component if no images fetched\n  }\n\n  return (\n    <>\n      <ul>{images}</ul>\n      {noImages}\n    </>\n  );\n};\n\nexport default Gallery;\n","import React from 'react';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { useContext, useEffect } from 'react';\nimport { PhotoContext } from '../context/PhotoContext';\nimport Gallery from './Gallery';\nimport Loader from './Loader';\n\nconst Container = ({ searchTerm }) => {\n  const { images, loading, runSearch, currentId } = useContext(PhotoContext);\n\n  useEffect(() => {\n    runSearch(searchTerm);\n    // eslint-disable-next-line\n  }, [searchTerm]);\n\n  return (\n    <div className=\"photo-container\">\n      <h3>Click on the pics to see the markers</h3>\n      <h3>Click on the markers to see the pics</h3>\n      {loading ? <Loader /> : <Gallery data={images} />}\n    </div>\n  );\n};\n\nexport default Container;\n","import React from 'react';\nimport Container from './Container';\n\nconst Item = ({ searchTerm }) => {\n  return (\n    <>\n      <h2>{searchTerm} Pictures</h2>\n      <Container searchTerm={searchTerm} />\n    </>\n  );\n};\n\nexport default Item;\n","import React from 'react';\nimport Container from './Container';\n\nconst Search = ({ searchTerm }) => (\n  <>\n    <h2>{searchTerm} Images</h2>\n    <Container searchTerm={searchTerm} />\n  </>\n);\n\nexport default Search;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div className=\"not-found\">\n    <h2>Page Not Found</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React, { useContext } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { PhotoContext } from '../context/PhotoContext';\nimport Thumbnail from './Thumbnail';\n\nexport default function WorldMap() {\n  const { currentGeoMarker, images, currentUrl, findImage } = useContext(\n    PhotoContext,\n  );\n  const defaultCenter = {\n    lat: -0.926658,\n    lng: -73.022003,\n  };\n  const zoom = 3;\n\n  const containerStyle = {\n    height: '30vh',\n    width: '100%',\n    margin: 0,\n    padding: 0,\n    boxShadow: '0px 2px 2px gray',\n  };\n\n  const sticky = {\n    position: 'sticky',\n    top: '0vh',\n    zIndex: '10',\n    margin: 0,\n    padding: 0,\n  };\n\n  const createMarkers = () => {\n    return images.map((img, i) => {\n      const pos = {\n        lat: parseFloat(img.latitude),\n        lng: parseFloat(img.longitude),\n      };\n      const id = img.id;\n      return (\n        <Marker key={i} position={pos} onMouseOver={() => findImage({ id })} />\n      );\n    });\n  };\n\n  return (\n    <div style={sticky}>\n      <LoadScript googleMapsApiKey={process.env.REACT_APP_API_KEY}>\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={currentGeoMarker || defaultCenter}\n          zoom={zoom}\n        >\n          {createMarkers()}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport PhotoContextProvider from './context/PhotoContext';\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Header from './components/Header';\nimport Item from './components/Item';\nimport Search from './components/Search';\nimport NotFound from './components/NotFound';\nimport WorldMap from './components/WorldMap';\n\nconst customHistory = createBrowserHistory();\n\nclass App extends Component {\n  // Prevent page reload, clear input, set URL and push history on submit\n  handleSubmit = (e, history, searchInput) => {\n    e.preventDefault();\n    e.currentTarget.reset();\n    let url = `/${searchInput}`;\n    history.push(url);\n  };\n\n  render() {\n    return (\n      <PhotoContextProvider>\n        <Router history={customHistory} basename=\"/\">\n          <div className=\"container\">\n            <Route\n              render={(props) => (\n                <>\n                  <WorldMap />\n                  <Header\n                    handleSubmit={this.handleSubmit}\n                    history={customHistory}\n                  />\n                </>\n              )}\n            />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => <Redirect to=\"/mountain\" />}\n              />\n              <Route\n                path=\"/mountain\"\n                render={() => <Item searchTerm=\"mountain\" />}\n              />\n              <Route path=\"/beach\" render={() => <Item searchTerm=\"beach\" />} />\n              <Route path=\"/bird\" render={() => <Item searchTerm=\"bird\" />} />\n              <Route path=\"/food\" render={() => <Item searchTerm=\"food\" />} />\n              <Route\n                path=\"/:searchInput\"\n                render={(props) => (\n                  <Search searchTerm={props.match.params.searchInput} />\n                )}\n              />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </PhotoContextProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}